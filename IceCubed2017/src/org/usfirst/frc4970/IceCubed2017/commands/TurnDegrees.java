// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4970.IceCubed2017.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc4970.IceCubed2017.Robot;

/**
 *
 */
public class TurnDegrees extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	private double kP;
	private double turnDegrees;
	private double dc, turnError, maxDc;
	
    public TurnDegrees(double degrees) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    	requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    	turnDegrees = degrees;       
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	kP = SmartDashboard.getNumber("Turn Degrees KP", 0.03);
    	turnDegrees = SmartDashboard.getNumber("Turn Degrees", turnDegrees);
    	maxDc = SmartDashboard.getNumber("Turn Degrees Max DC", 0.25);
    	Robot.resetGyro();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	SmartDashboard.putNumber("Gyro Angle", Robot.getGyroAngle());
    	turnError = Robot.getGyroAngle() - turnDegrees;
    	SmartDashboard.putNumber("Turn Error", turnError);
    	dc = (turnError*kP);
    	SmartDashboard.putNumber("Turn Rotate Dc", dc);
    	if (Math.abs(dc) > maxDc)
    	{
    		if (dc < 0)
    		{
    			dc = -maxDc;
    		} else
    		{
    			dc = maxDc;
    		}
    	}
    	Robot.driveTrain.drive(0, 
				   -dc, false);
    }

    protected boolean isFinished() {
    	return (Math.abs(Robot.getGyroAngle() - turnDegrees) < 1.0);
    }
    
    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveTrain.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
