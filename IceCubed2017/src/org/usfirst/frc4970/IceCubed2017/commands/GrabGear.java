// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4970.IceCubed2017.commands;
import edu.wpi.first.wpilibj.PowerDistributionPanel;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc4970.IceCubed2017.Robot;

/**
 *
 */
public class GrabGear extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	private PowerDistributionPanel pdp = new PowerDistributionPanel();
	private double gearMotorCurrent;
	
	private double storedDutyCycle;
	private double storedMaxCurrent;
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public GrabGear(double dutyCycle, double maxCurrent) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.gearMotor);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        storedDutyCycle = dutyCycle;
        storedMaxCurrent = maxCurrent;
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.gearMotor.grab(SmartDashboard.getNumber("Grab Gear Duty Cycle", storedDutyCycle));
		gearMotorCurrent = pdp.getCurrent(15);
    	SmartDashboard.putNumber("Gear Motor Current", gearMotorCurrent);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	if (gearMotorCurrent > SmartDashboard.getNumber("Grab Gear Current Max", storedMaxCurrent))
    	{
    		return true;
    	}
    	return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.gearMotor.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
    
}
